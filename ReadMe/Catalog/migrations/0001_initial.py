# Generated by Django 4.2.7 on 2023-12-14 07:54

import Catalog.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, max_length=200, verbose_name='Имя')),
                ('last_name', models.CharField(db_index=True, max_length=200, verbose_name='Фамилия')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Дата смерти')),
                ('about', models.TextField(blank=True, default='', max_length=1000, null=True, verbose_name='Об авторе')),
                ('image', models.ImageField(blank=True, null=True, upload_to=Catalog.models.author_media_path, verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(default='django-db-models-fields-charfield', max_length=200, unique=True)),
                ('about', models.TextField(max_length=1000, verbose_name='Описание книги')),
                ('rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('link_to_file', models.FileField(blank=True, null=True, upload_to=Catalog.models.book_directory_path, verbose_name='Путь до файла')),
                ('image', models.ImageField(blank=True, null=True, upload_to=Catalog.models.book_directory_path, verbose_name='Изображение')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Catalog.author', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Книги',
                'ordering': ['title', 'author'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(db_index=True, max_length=200, unique=True, verbose_name='Жанр')),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['genre'],
            },
        ),
        migrations.CreateModel(
            name='Bookshelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ManyToManyField(to='Catalog.book', verbose_name='Книга')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Книжная полка',
                'verbose_name_plural': 'Книжная полки',
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(to='Catalog.genre', verbose_name='Жанр'),
        ),
    ]
